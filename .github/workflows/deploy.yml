on:
  push:
    branches:
      - "docker-deploy"

jobs:
  build-deploy:
    runs-on: ubuntu-20.04
    outputs:
      imageTag: ${{ steps.docker-push.outputs.imageTag }}
    steps:
      - uses: actions/checkout@v2

      - id: install
        name: yarn install
        run: yarn

      - id: build
        name: Build
        run: yarn build

      - id: docker-build
        name: Build Docker image
        run: |
          echo env.ECR_REPO: "${{ toJson(github) }}"
          echo env.ECR_REPO: "${{ toJson(env)  }}"
      #     echo github.run_number: "${{ github.run_number }}"
      #     docker build -t shopify:latest .

      # - id: aws-creds
      #   name: Configure AWS Creds
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: il-central-1

      # - id: login-ecr
      #   name: Login to ECR
      #   uses: aws-actions/amazon-ecr-login@v1

      # - id: docker-push
      #   name: Push Docker image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ github.env.ECR_REPO }}
      #     IMAGE_TAG: build-${{ github.run_number }}
      #   run: |
      #     docker tag ${{ github.env.ECR_REPO }}:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "::set-output name=imageTag::$IMAGE_TAG"
